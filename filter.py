import pandas as pd
df = pd.read_csv("csv/final.csv")
print(df.shape)
df = df.drop(columns=['temp_planet_date', 'temp_planet_mass', 'hyperlink', 'planet_radius', 'orbital_period', 'eccentricity'])
df.rename({
  "name": "name",
  "light_years_from_earth": "distance",
  "planet_mass": "mass",
  "stellar_magnitude": "luminocity",
  "discovery_date": "discovery_date",
  "planet_type": "planet_type",
  "pl_name": "planet_name",
  "pl_hostname": "planet_hoststar_name",
  "pl_letter": "planet_letter",
  "pl_discmethod": "planet_discovery_method",
  "pl_controvflag": "planet_existance_in_question",
  "pl_pnum": "num_of_planets_in_system",
  "pl_orbper": "planet_orbital_period",
  "pl_orbpererr1": "planet_orbital_period_error1",
  "pl_orbpererr2": "planet_orbital_period_error2",
  "pl_orbperlim": "planet_minimum_orbital_period",
  "pl_orbspermax": "planet_maximum_orbital_period",
  "pl_orbspermaxerr1": "planet_maximum_orbital_period_error1",
  "pl_orbspermaxerr2": "planet_maximum_orbital_period_error2",
  "pl_orbsmaxlim": "planet_maximum_limit_orbtial_period",
  "pl_orbeccen": "planet_eccentricity",
  "pl_orbeccenerr1": "planet_eccentricity_error1",
  "pl_orbeccenerr2": "planet_eccentricity_error2",
  "pl_orbeccenlim": "planet_eccentricity_limit",
  "pl_orbincl": "planet_orbital_inclination",
  "pl_orbinclerr1": "planet_orbital_inclination_error1",
  "pl_orbinclerr2": "planet_orbital_inclination_error2",
  "pl_orbincllim": "planet_min_orbital_inclination",
  "pl_bmassj": "mass_in_kg",
  "pl_bmassjerr1": "mass_in_unit_error1",
  "pl_bmassjerr2": "mass_in_unit_error2",
  "pl_bmassjlim": "minimum_mass_in_unit",
  "pl_bmassprov": "mass_unit",
  "pl_radj": "planet_radius_in_unit",
  "pl_radjerr1": "planet_radius_in_unit_error1",
  "pl_radjerr2": "planet_radius_in_unit_error2",
  "pl_radjlim": "minimum_planet_radius_in_unit",
  "pl_dens": "planet_density",
  "pl_denserr1": "planet_density_error1",
  "pl_denserr2": "planet_density_error2",
  "pl_denslim": "minimum_planet_density",
  "pl_ttvflag": "planet_orbital_inclination_compared_to_others",
  "pl_kepflag": "kepler_telescope_data",
  "pl_k2flag": "k2_telescope_data",
  "pl_nnotes": "num_of_notes",
  "ra_str": "right_ascension_east_n_west_base60",
  "ra": "right_ascension_east_n_west_base10",
  "dec_str": "right_ascension_north_n_south_base60",
  "dec": "right_ascension_north_n_south_base10",
  "st_dist": "steller_distance",
  "st_disterr1": "steller_distance_error1",
  "st_disterr2": "steller_distance_error2",
  "st_distlim": "minimum_steller_distance",
  "gaia_dist": "dist_from_gaia_paralax",
  "gaia_disterr1": "dist_from_gaia_paralax_error1",
  "gaia_disterr2": "dist_from_gaia_paralax_error2",
  "gaia_distlim": "minimum_dist_from_gaia_paralax",
  "st_optmag": "steller_magnitude",
  "st_optmagerr": "steller_magnitude_error",
  "st_optmaglim": "minimum_steller_magnitude",
  "st_optband": "steller_optical_magnitude_band",
  "gaia_gmag": "photometric_visibility",
  "gaia_gmagerr": "photometric_visibility_error",
  "gaia_gmaglim": "photometric_visibility_magnitude",
  "st_teff": "temperature_of_hoststar",
  "st_tefferr1": "temperature_of_hoststar_error1",
  "st_tefferr2": "temperature_of_hoststar_error2",
  "st_tefflim": "minimum_temperature_of_hoststar",
  "st_mass": "mass_of_hoststar",
  "st_masserr1": "mass_of_hoststar_error1",
  "st_masserr2": "mass_of_hoststar_error2",
  "st_masslim": "minimum_mass_of_hoststar",
  "st_rad": "mass_of_hoststar",
  "st_raderr1": "radius_of_hoststar_error1",
  "st_raderr2": "radius_of_hoststar_error2",
  "st_radlim": "minimum_radius_of_hoststar",
  "rowupdate": "date_of_last_update",
  "pl_facility": "observer",
}, axis='columns', inplace=True)

print(df.shape)
#Save the data into main.csv
df.to_csv("csv/filtered.csv")